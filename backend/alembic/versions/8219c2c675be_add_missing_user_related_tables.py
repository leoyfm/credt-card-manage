"""add missing user related tables

Revision ID: 8219c2c675be
Revises: 50a46651bd0c
Create Date: 2025-06-12 00:15:43.350545

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8219c2c675be'
down_revision: Union[str, None] = '50a46651bd0c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('login_logs',
    sa.Column('id', sa.UUID(), nullable=False, comment='日志ID'),
    sa.Column('user_id', sa.UUID(), nullable=True, comment='用户ID'),
    sa.Column('login_type', sa.String(length=20), nullable=False, comment='登录类型'),
    sa.Column('login_method', sa.String(length=20), nullable=False, comment='登录方式'),
    sa.Column('ip_address', postgresql.INET(), nullable=True, comment='IP地址'),
    sa.Column('user_agent', sa.Text(), nullable=True, comment='用户代理'),
    sa.Column('location', sa.String(length=100), nullable=True, comment='地理位置'),
    sa.Column('is_success', sa.Boolean(), nullable=True, comment='是否成功'),
    sa.Column('failure_reason', sa.String(length=100), nullable=True, comment='失败原因'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='创建时间'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('verification_codes',
    sa.Column('id', sa.UUID(), nullable=False, comment='验证码ID'),
    sa.Column('user_id', sa.UUID(), nullable=False, comment='用户ID'),
    sa.Column('code', sa.String(length=10), nullable=False, comment='验证码'),
    sa.Column('code_type', sa.String(length=20), nullable=False, comment='验证码类型'),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False, comment='过期时间'),
    sa.Column('is_used', sa.Boolean(), nullable=True, comment='是否已使用'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='创建时间'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('wechat_bindings',
    sa.Column('id', sa.UUID(), nullable=False, comment='绑定ID'),
    sa.Column('user_id', sa.UUID(), nullable=False, comment='用户ID'),
    sa.Column('openid', sa.String(length=100), nullable=False, comment='微信OpenID'),
    sa.Column('unionid', sa.String(length=100), nullable=True, comment='微信UnionID'),
    sa.Column('nickname', sa.String(length=100), nullable=True, comment='微信昵称'),
    sa.Column('avatar_url', sa.String(length=500), nullable=True, comment='微信头像'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='是否激活'),
    sa.Column('bound_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='绑定时间'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='更新时间'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('openid')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('wechat_bindings')
    op.drop_table('verification_codes')
    op.drop_table('login_logs')
    # ### end Alembic commands ###
