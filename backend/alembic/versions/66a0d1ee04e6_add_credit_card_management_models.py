"""Add credit card management models

Revision ID: 66a0d1ee04e6
Revises: 8219c2c675be
Create Date: 2025-06-13 09:59:02.890838

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '66a0d1ee04e6'
down_revision: Union[str, None] = '8219c2c675be'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('banks',
    sa.Column('id', sa.UUID(), nullable=False, comment='银行ID'),
    sa.Column('bank_code', sa.String(length=20), nullable=False, comment='银行代码'),
    sa.Column('bank_name', sa.String(length=100), nullable=False, comment='银行名称'),
    sa.Column('bank_logo', sa.String(length=500), nullable=True, comment='银行logo'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='是否激活'),
    sa.Column('sort_order', sa.Integer(), nullable=True, comment='排序'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='更新时间'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('bank_code')
    )
    op.create_table('credit_cards',
    sa.Column('id', sa.UUID(), nullable=False, comment='信用卡ID'),
    sa.Column('user_id', sa.UUID(), nullable=False, comment='用户ID'),
    sa.Column('bank_id', sa.UUID(), nullable=True, comment='银行ID'),
    sa.Column('card_number', sa.String(length=100), nullable=False, comment='卡号(加密存储)'),
    sa.Column('card_name', sa.String(length=100), nullable=False, comment='卡片名称'),
    sa.Column('card_type', sa.String(length=20), nullable=True, comment='卡片类型'),
    sa.Column('card_network', sa.String(length=20), nullable=True, comment='卡组织'),
    sa.Column('card_level', sa.String(length=20), nullable=True, comment='卡片等级'),
    sa.Column('credit_limit', sa.Numeric(precision=15, scale=2), nullable=False, comment='信用额度'),
    sa.Column('available_limit', sa.Numeric(precision=15, scale=2), nullable=True, comment='可用额度'),
    sa.Column('used_limit', sa.Numeric(precision=15, scale=2), nullable=True, comment='已用额度'),
    sa.Column('expiry_month', sa.Integer(), nullable=False, comment='有效期月份'),
    sa.Column('expiry_year', sa.Integer(), nullable=False, comment='有效期年份'),
    sa.Column('billing_date', sa.Integer(), nullable=True, comment='账单日'),
    sa.Column('due_date', sa.Integer(), nullable=True, comment='还款日'),
    sa.Column('annual_fee', sa.Numeric(precision=10, scale=2), nullable=True, comment='年费金额'),
    sa.Column('fee_waivable', sa.Boolean(), nullable=True, comment='年费是否可减免'),
    sa.Column('fee_auto_deduct', sa.Boolean(), nullable=True, comment='是否自动扣费'),
    sa.Column('fee_due_month', sa.Integer(), nullable=True, comment='年费到期月份'),
    sa.Column('features', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='特色功能'),
    sa.Column('points_rate', sa.Numeric(precision=4, scale=2), nullable=True, comment='积分倍率'),
    sa.Column('cashback_rate', sa.Numeric(precision=4, scale=2), nullable=True, comment='返现比例'),
    sa.Column('status', sa.String(length=20), nullable=True, comment='状态'),
    sa.Column('is_primary', sa.Boolean(), nullable=True, comment='是否主卡'),
    sa.Column('notes', sa.Text(), nullable=True, comment='备注'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='更新时间'),
    sa.ForeignKeyConstraint(['bank_id'], ['banks.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('credit_cards')
    op.drop_table('banks')
    # ### end Alembic commands ###
